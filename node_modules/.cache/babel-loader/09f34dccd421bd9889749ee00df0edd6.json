{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/post/Post.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Button from '../Button';\nimport { starPost, unstarPost } from '../../actions/post';\n\nconst Post = ({\n  auth,\n  post: {\n    post,\n    loading\n  },\n  getPost,\n  starPost,\n  unstarPost,\n  match\n}) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getPost(match.params.id);\n  }, [getPost]);\n\n  const starupdate = id => {\n    if (!auth.user) {\n      return null;\n    }\n\n    if (!auth.loading && post.stars.filter(el => el.user === auth.user._id).length === 0) {\n      starPost(id);\n    } else {\n      unstarPost(id);\n    }\n  };\n\n  let displaystar = /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  });\n\n  if (!loading && post && auth && auth.isAuthenticated && !auth.loading) {\n    if (post.stars.filter(el => el.user === auth.user._id).length !== 0) {\n      displaystar = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }\n      });\n    }\n  }\n\n  return loading || post == null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-dark p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${post.user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: post.avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, post.name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: '#90a39b'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, post.text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }\n  }, post.date)), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: e => starupdate(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, displaystar, ' ', post.stars.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 49\n    }\n  }, post.stars.length))))));\n};\n\nPost.propTypes = {\n  starPost: PropTypes.func.isRequired,\n  unstarPost: PropTypes.func.isRequired,\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapstatetoprops = state => ({\n  post: state.post,\n  auth: state.auth\n});\n\nexport default connect(mapstatetoprops, {\n  getPost,\n  starPost,\n  unstarPost\n})(Post);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/post/Post.js"],"names":["React","useEffect","Fragment","connect","Spinner","getPost","PropTypes","Link","Moment","Button","starPost","unstarPost","Post","auth","post","loading","match","window","scrollTo","params","id","starupdate","user","stars","filter","el","_id","length","displaystar","isAuthenticated","avatar","name","color","title","text","date","e","propTypes","func","isRequired","object","mapstatetoprops","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,QAAR,EAAiBC,UAAjB,QAAkC,oBAAlC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,IAAI,EAAC;AAACA,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAX;AAA0BV,EAAAA,OAA1B;AAAkCK,EAAAA,QAAlC;AAA2CC,EAAAA,UAA3C;AAAsDK,EAAAA;AAAtD,CAAD,KAAkE;AAC3Ef,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAb,IAAAA,OAAO,CAACW,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAP;AACH,GAHQ,EAGP,CAACf,OAAD,CAHO,CAAT;;AAIA,QAAMgB,UAAU,GAAID,EAAD,IAAQ;AACvB,QAAG,CAACP,IAAI,CAACS,IAAT,EAAc;AACV,aAAO,IAAP;AACH;;AACD,QAAG,CAACT,IAAI,CAACE,OAAN,IAAiBD,IAAI,CAACS,KAAL,CAAWC,MAAX,CAAkBC,EAAE,IAAIA,EAAE,CAACH,IAAH,KAAUT,IAAI,CAACS,IAAL,CAAUI,GAA5C,EAAiDC,MAAjD,KAA0D,CAA9E,EAAgF;AAC5EjB,MAAAA,QAAQ,CAACU,EAAD,CAAR;AACH,KAFD,MAGK;AACDT,MAAAA,UAAU,CAACS,EAAD,CAAV;AACH;AACJ,GAVD;;AAWA,MAAIQ,WAAW,gBAAI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB;;AACA,MAAG,CAACb,OAAD,IAAUD,IAAV,IAAgBD,IAAhB,IAAwBA,IAAI,CAACgB,eAA7B,IAAgD,CAAChB,IAAI,CAACE,OAAzD,EAAiE;AAC7D,QAAGD,IAAI,CAACS,KAAL,CAAWC,MAAX,CAAkBC,EAAE,IAAIA,EAAE,CAACH,IAAH,KAAUT,IAAI,CAACS,IAAL,CAAUI,GAA5C,EAAiDC,MAAjD,KAA0D,CAA7D,EAA+D;AAC3DC,MAAAA,WAAW,gBAAI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;AACJ;;AAGD,SAAOb,OAAO,IAAID,IAAI,IAAE,IAAjB,gBAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,gBAAqC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACxC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,YAAWA,IAAI,CAACQ,IAAK,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,GAAG,EAAER,IAAI,CAACgB,MAFd;AAGI,IAAA,GAAG,EAAC,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAI,CAACiB,IAAV,CANJ,CADJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BlB,IAAI,CAACmB,KAApC,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,IAAI,CAACoB,IADV,CAFJ,eAKI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACc,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BpB,IAAI,CAACqB,IAAlC,CADd,CALJ,eAQI;AAAM,IAAA,OAAO,EAAGC,CAAD,IAAOf,UAAU,CAACP,IAAI,CAACY,GAAN,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,WADL,EACkB,GADlB,EAEKd,IAAI,CAACS,KAAL,CAAWI,MAAX,GAAkB,CAAlB,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOb,IAAI,CAACS,KAAL,CAAWI,MAAlB,CAF5B,CADJ,CARJ,CAXJ,CADwC,CAA5C;AA+BH,CAvDD;;AAyDAf,IAAI,CAACyB,SAAL,GAAiB;AACb3B,EAAAA,QAAQ,EAACJ,SAAS,CAACgC,IAAV,CAAeC,UADX;AAEb5B,EAAAA,UAAU,EAACL,SAAS,CAACgC,IAAV,CAAeC,UAFb;AAGblC,EAAAA,OAAO,EAACC,SAAS,CAACgC,IAAV,CAAeC,UAHV;AAIbzB,EAAAA,IAAI,EAACR,SAAS,CAACkC,MAAV,CAAiBD,UAJT;AAKb1B,EAAAA,IAAI,EAACP,SAAS,CAACkC,MAAV,CAAiBD;AALT,CAAjB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9B5B,EAAAA,IAAI,EAAC4B,KAAK,CAAC5B,IADmB;AAE9BD,EAAAA,IAAI,EAAC6B,KAAK,CAAC7B;AAFmB,CAAL,CAA7B;;AAKA,eAAeV,OAAO,CAACsC,eAAD,EAAiB;AAACpC,EAAAA,OAAD;AAASK,EAAAA,QAAT;AAAkBC,EAAAA;AAAlB,CAAjB,CAAP,CAAuDC,IAAvD,CAAf","sourcesContent":["import React,{useEffect, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport {getPost} from '../../actions/post';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Button from '../Button';\nimport {starPost,unstarPost} from '../../actions/post';\n\nconst Post = ({auth,post:{post,loading},getPost,starPost,unstarPost,match}) => {\n    useEffect(()=>{\n        window.scrollTo(0, 0);\n        getPost(match.params.id);\n    },[getPost]);\n    const starupdate = (id) => {\n        if(!auth.user){\n            return null;\n        }\n        if(!auth.loading && post.stars.filter(el => el.user===auth.user._id).length===0){\n            starPost(id);\n        }\n        else {\n            unstarPost(id);\n        }\n    }\n    let displaystar = (<i className='far fa-star'></i>)\n    if(!loading&&post&&auth && auth.isAuthenticated && !auth.loading){\n        if(post.stars.filter(el => el.user===auth.user._id).length!==0){\n            displaystar = (<i className=\"fas fa-star\"></i>)\n        }\n    }\n\n\n    return loading || post==null ? <Spinner/> :(<Fragment>\n        <div className=\"post bg-dark p-1 my-1\">\n            <div>\n                <Link to={`/profile/${post.user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={post.avatar}\n                        alt=\"\"\n                    />\n                    <h4>{post.name}</h4>\n                </Link>\n            </div>\n            <div>\n                <h3 style={{color:'#90a39b'}}>{post.title}</h3>\n                <p className=\"my-1\">\n                    {post.text}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='DD/MM/YYYY'>{post.date}</Moment>\n                </p>\n                <span onClick={(e) => starupdate(post._id)}>\n                    <Button>\n                        {displaystar}{' '}\n                        {post.stars.length>0 && <span>{post.stars.length}</span>}\n                    </Button>\n                </span>\n\n            </div>\n        </div>    \n    </Fragment>)\n        \n}\n\nPost.propTypes = {\n    starPost:PropTypes.func.isRequired,\n    unstarPost:PropTypes.func.isRequired,\n    getPost:PropTypes.func.isRequired,\n    post:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n}\nconst mapstatetoprops = state => ({\n    post:state.post,\n    auth:state.auth\n})\n\nexport default connect(mapstatetoprops,{getPost,starPost,unstarPost})(Post);\n"]},"metadata":{},"sourceType":"module"}