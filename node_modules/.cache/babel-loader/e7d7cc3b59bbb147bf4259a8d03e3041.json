{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_STARS, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialstate = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialstate, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_STARS:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          stars: payload.stars\n        } : post),\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_STARS","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialstate","posts","post","loading","error","state","action","type","payload","comments","filter","comment","_id","map","id","stars"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,cARJ,QASM,kBATN;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,IAAI,EAAC,IAFY;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,KAAK,EAAC;AAJW,CAArB;AAMA,eAAe,UAASC,KAAK,GAACL,YAAf,EAA4BM,MAA5B,EAAmC;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAOC,IAAAA;AAAP,MAAmBF,MAAzB;;AACA,UAAOC,IAAP;AACI,SAAKf,SAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFJ,QAAAA,KAAK,EAACO,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKN,QAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,IAAI,EAACM,OAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKP,QAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFJ,QAAAA,KAAK,EAAC,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAgBO,OAAhB,CAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKL,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFH,QAAAA,IAAI,EAAC,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAeO,UAAAA,QAAQ,EAACD;AAAxB,SAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKJ,cAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,IAAI,EAAC,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAeO,UAAAA,QAAQ,EAACJ,KAAK,CAACH,IAAN,CAAWO,QAAX,CAAoBC,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBJ,OAAtD;AAAxB,SAFH;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKV,UAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFD,QAAAA,KAAK,EAACI,OAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKT,YAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFJ,QAAAA,KAAK,EAACI,KAAK,CAACJ,KAAN,CAAYY,GAAZ,CAAgBX,IAAI,IAAIA,IAAI,CAACU,GAAL,KAAaJ,OAAO,CAACM,EAArB,GAA0B,EAAC,GAAGZ,IAAJ;AAASa,UAAAA,KAAK,EAACP,OAAO,CAACO;AAAvB,SAA1B,GAAwDb,IAAhF,CAFJ;AAGFC,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFJ,QAAAA,KAAK,EAACI,KAAK,CAACJ,KAAN,CAAYS,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACU,GAAL,KAAaJ,OAAxC,CAFJ;AAGFL,QAAAA,OAAO,EAAC;AAHN,OAAN;;AAKJ;AACI,aAAOE,KAAP;AAlDR;AAoDH","sourcesContent":["import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_STARS,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n}from '../actions/types';\nconst initialstate = {\n    posts:[],\n    post:null,\n    loading:true,\n    error:{}\n}\nexport default function(state=initialstate,action){\n    const { type,payload } = action;\n    switch(type){\n        case GET_POSTS:\n            return{\n                ...state,\n                posts:payload,\n                loading:false\n            }\n        case GET_POST:\n            return{\n                ...state,\n                post:payload,\n                loading:false\n            }\n        case ADD_POST:\n            return{\n                ...state,\n                posts:[...state.posts,payload],\n                loading:false\n            }\n        case ADD_COMMENT:\n            return{\n                ...state,\n                post:{...state.post,comments:payload},\n                loading:false\n            }\n        case REMOVE_COMMENT:\n            return{\n                ...state,\n                post:{...state.post,comments:state.post.comments.filter(comment => comment._id !== payload)},\n                loading:false\n            }            \n        case POST_ERROR:\n            return{\n                ...state,\n                error:payload,\n                loading:false\n            }\n        case UPDATE_STARS:\n            return{\n                ...state,\n                posts:state.posts.map(post => post._id === payload.id ? {...post,stars:payload.stars}:post),\n                loading:false\n            }\n        case DELETE_POST:\n            return{\n                ...state,\n                posts:state.posts.filter(post => post._id !== payload),\n                loading:false\n            }          \n        default:\n            return state      \n    }\n}"]},"metadata":{},"sourceType":"module"}