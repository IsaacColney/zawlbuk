{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_STARS, DELETE_POST, ADD_POST } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const starPost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/star/${id}`);\n    dispatch({\n      type: UPDATE_STARS,\n      payload: {\n        id,\n        stars: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const unstarPost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unstar/${id}`);\n    dispatch({\n      type: UPDATE_STARS,\n      payload: {\n        id,\n        stars: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletepost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addpost = formdata => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`/api/posts`, formdata, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_STARS","DELETE_POST","ADD_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","starPost","id","put","stars","unstarPost","deletepost","delete","addpost","formdata","config","headers","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_STARS,\n    DELETE_POST,\n    ADD_POST\n} from './types';\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n        dispatch({\n            type:GET_POSTS,\n            payload:res.data\n        })    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}\nexport const starPost = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/star/${id}`);\n        dispatch({\n            type:UPDATE_STARS,\n            payload:{id,stars:res.data}\n        })    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}\nexport const unstarPost = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unstar/${id}`);\n        dispatch({\n            type:UPDATE_STARS,\n            payload:{id,stars:res.data}\n        })    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}\nexport const deletepost = id => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type:DELETE_POST,\n            payload:id\n        });\n        dispatch(setAlert('Post deleted','success'))    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}\nexport const addpost = formdata => async dispatch => {\n    try {\n        const config = {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const res = await axios.post(`/api/posts`,formdata,config);\n        dispatch({\n            type:ADD_POST,\n            payload:res.data\n        });\n        dispatch(setAlert('Post created','success'))    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}