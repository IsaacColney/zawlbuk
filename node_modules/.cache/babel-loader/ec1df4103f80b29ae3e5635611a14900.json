{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/auth/Register.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const [formData, setformData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setformData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Password a in mil lo\", \"danger\");\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }), \" Create Your Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    action: \"create-profile.html\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"This site uses Gravatar so if you want Link profile image, use Gravatar email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    minLength: \"6\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    minLength: \"6\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 42\n    }\n  }, \"Sign In\")));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst maptoProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(maptoProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","useEffect","Link","Redirect","connect","setAlert","register","PropTypes","Button","Register","isAuthenticated","formData","setformData","name","email","password","password2","window","scrollTo","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","maptoProps","state","auth"],"mappings":"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","sourcesContent":["import React,{Fragment,useState,useEffect} from 'react';\nimport {Link,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setAlert} from '../../actions/alert';\nimport {register} from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\n\nconst Register = ({setAlert,register,isAuthenticated}) => {\n    const [formData,setformData] = useState({\n        name:\"\",\n        email:\"\",\n        password:\"\",\n        password2:\"\"\n    });\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    },[])\n    const {name,email,password,password2} = formData;\n    const onChange = (e) => setformData({...formData,[e.target.name]:e.target.value});\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(password!==password2){\n            setAlert(\"Password a in mil lo\",\"danger\");\n        }\n        else{\n            register({name,email,password});\n        }\n    }\n    if(isAuthenticated){\n        return <Redirect to=\"/dashboard\"/>;\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" action=\"create-profile.html\" onSubmit = {(e) => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={(e) => onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={(e) => onChange(e)} required/>\n                    <small className=\"form-text\"\n                        >This site uses Gravatar so if you want Link profile image, use\n                        Gravatar email</small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value = {password}\n                        onChange={(e) => onChange(e)} required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        value={password2}\n                        minLength=\"6\"\n                        onChange={(e) => onChange(e)} required\n                    />\n                </div>\n                <Button type=\"primary\">Sign Up</Button>\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    );\n}\nRegister.propTypes = {\n    setAlert:PropTypes.func.isRequired,\n    register:PropTypes.func.isRequired,\n    isAuthenticated:PropTypes.bool,\n}\nconst maptoProps = (state) => {\n    return {isAuthenticated:state.auth.isAuthenticated};\n} \nexport default connect(maptoProps,{setAlert,register})(Register);\n"]},"metadata":{},"sourceType":"module"}