{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport Spinner from '../Layout/Spinner';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProfilebyId } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport Button from '../Button';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileEducation from './ProfileEducation';\n\nconst Profile = ({\n  match,\n  getProfilebyId,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfilebyId(match.params.id);\n  }, [getProfilebyId, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, profile === null || loading === true ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 50\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 42\n    }\n  }, \"Go back To Scholars\")), /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"Education\"), profile.education.length !== 0 ? profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 30\n    }\n  }, \"No education credentials\")), auth.isAuthenticated && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/editprofile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 45\n    }\n  }, \"Edit Profile\"))));\n};\n\nProfile.propTypes = {\n  getProfilebyId: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStatetoProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStatetoProps, {\n  getProfilebyId\n})(Profile);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","Spinner","connect","PropTypes","getProfilebyId","Link","Button","ProfileTop","ProfileAbout","ProfileEducation","Profile","match","profile","loading","auth","params","id","education","length","map","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStatetoProps","state"],"mappings":"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","sourcesContent":["import React,{Fragment,useEffect} from 'react';\nimport Spinner from '../Layout/Spinner';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getProfilebyId} from '../../actions/profile'\nimport {Link} from 'react-router-dom';\nimport Button from '../Button';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileEducation from './ProfileEducation';\nconst Profile = ({match,getProfilebyId,profile:{profile,loading},auth}) => {\n    useEffect(() => {\n        getProfilebyId(match.params.id)\n    },[getProfilebyId,match.params.id]);\n    return (\n        <Fragment>\n            {profile===null || loading ===true ? <Spinner/> :(\n                <Fragment>\n                    <Link to='/profiles'><Button>Go back To Scholars</Button></Link>\n                    <ProfileTop profile={profile}/>\n                    <ProfileAbout profile={profile}/>\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        {profile.education.length!==0 ? (profile.education.map(education => (\n                            <ProfileEducation education={education}/>\n                        ))):(<Fragment>No education credentials</Fragment>)\n                        }\n                    </div>\n                    {(auth.isAuthenticated && auth.user._id===profile.user._id) && \n                    <Link to='/editprofile'><Button type='secondary'>Edit Profile</Button></Link>\n                    }\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfilebyId:PropTypes.func.isRequired,\n    auth:PropTypes.object.isRequired,\n    profile:PropTypes.object.isRequired,\n}\nconst mapStatetoProps = state => ({\n    profile:state.profile,\n    auth:state.auth\n});\n\nexport default connect(mapStatetoProps,{getProfilebyId})(Profile)\n"]},"metadata":{},"sourceType":"module"}