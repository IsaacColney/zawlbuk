{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/posts/PostsItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Button from '../Button';\nimport { starPost, unstarPost } from '../../actions/post';\n\nconst PostsItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    title,\n    avatar,\n    stars,\n    date,\n    comments,\n    user\n  },\n  starPost,\n  unstarPost\n}) => {\n  const starupdate = id => {\n    if (auth.isAuthenticated && !stars.includes(auth.user._id)) {\n      starPost(id);\n    } else if (auth.isAuthenticated && stars.includes(auth.user._id)) {\n      unstarPost(id);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post bg-dark p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"profile.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: '#90a39b'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 35\n    }\n  }, date)), /*#__PURE__*/React.createElement(Button, {\n    class: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: e => starupdate(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, !auth.loading && stars.includes(auth.user._id) ? /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 80\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 110\n    }\n  }), ' ', stars.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 48\n    }\n  }, stars.length))), /*#__PURE__*/React.createElement(Link, {\n    to: `/post/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 47\n    }\n  }, \"View Full Post and Discussions\")), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(Button, {\n    type: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })))));\n};\n\nPostsItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  starPost: PropTypes.func.isRequired,\n  unstarPost: PropTypes.func.isRequired\n};\n\nconst mapStatetoProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStatetoProps, {\n  starPost,\n  unstarPost\n})(PostsItem);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/posts/PostsItem.js"],"names":["React","Fragment","PropTypes","connect","Link","Moment","Button","starPost","unstarPost","PostsItem","auth","post","_id","text","name","title","avatar","stars","date","comments","user","starupdate","id","isAuthenticated","includes","color","e","loading","length","propTypes","object","isRequired","func","mapStatetoProps","state"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Button from '../Button';\nimport {starPost,unstarPost} from '../../actions/post';\nconst PostsItem = ({auth,post:{_id,text,name,title,avatar,stars,date,comments,user},starPost,unstarPost}) => {\n    const starupdate = (id) => {\n        if(auth.isAuthenticated && !stars.includes(auth.user._id)){\n            starPost(id);\n        }\n        else if(auth.isAuthenticated && stars.includes(auth.user._id)){\n            unstarPost(id);\n        }\n    }\n    return (\n        <div class=\"posts\">\n            <div class=\"post bg-dark p-1 my-1\">\n                <div>\n                    <Link to=\"profile.html\">\n                        <img\n                            class=\"round-img\"\n                            src={avatar}\n                            alt=\"\"\n                        />\n                        <h4>{name}</h4>\n                    </Link>\n                </div>\n                <div>\n                    <h3 style={{color:'#90a39b'}}>{title}</h3>\n                    <p class=\"my-1\">\n                        {text}\n                    </p>\n                    <p class=\"post-date\">\n                        Posted on <Moment format='DD/MM/YYYY'>{date}</Moment>\n                    </p>\n                    <Button class=\"btn btn-light\">\n                        <span onClick={e => starupdate(_id)}>\n                            {!auth.loading && stars.includes(auth.user._id) ? (<i class=\"fas fa-star\"></i>):(<i className='far fa-star'></i>)}{' '}\n                            {stars.length>0 && <span>{stars.length}</span>}\n                        </span>\n                    </Button>\n                    <Link to={`/post/${_id}`}><Button type='primary'>\n                    View Full Post and Discussions\n                    </Button>\n                    </Link>\n                    {!auth.loading && user === auth.user._id &&(\n                    <Button      \n                    type=\"secondary\"\n                    >\n                    <i class=\"fas fa-times\"></i>\n                    </Button>\n                    )}\n                </div>\n            </div>    \n        </div>\n\n    )\n}\n\nPostsItem.propTypes = {\n    post:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n    starPost:PropTypes.func.isRequired,\n    unstarPost:PropTypes.func.isRequired,\n}\nconst mapStatetoProps = state => ({\n    auth:state.auth\n})\nexport default connect(mapStatetoProps,{starPost,unstarPost})(PostsItem);\n"]},"metadata":{},"sourceType":"module"}