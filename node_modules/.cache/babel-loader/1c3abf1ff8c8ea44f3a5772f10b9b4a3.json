{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/dashboard/dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCurrentProfile } from '../../actions/profile';\nimport PropTypes from 'prop-types';\nimport Spinner from '../Layout/Spinner';\nimport Button from '../Button';\nimport Dashboardactions from './dashboardactions';\nimport Education from './Education';\n\nconst Dashboard = ({\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  },\n  getCurrentProfile\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 43\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }), \"   \", \"Welcome \", user && user.name), profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Dashboardactions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"I chungchang tlema zawng a hnuaia button-ah hian hmet la belh rawh le\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/createprofile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 43\n    }\n  }, \"Create Profile\"))), !profile.education && /*#__PURE__*/React.createElement(Education, {\n    education: profile.education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }\n  }));\n};\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  education: PropTypes.array\n};\n\nconst maptoprops = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  education: state.profile.education,\n  loading: state.loading\n});\n\nexport default connect(maptoprops, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/dashboard/dashboard.js"],"names":["React","useEffect","Fragment","connect","Link","getCurrentProfile","PropTypes","Spinner","Button","Dashboardactions","Education","Dashboard","auth","user","profile","loading","name","education","propTypes","object","isRequired","func","array","maptoprops","state"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {getCurrentProfile} from '../../actions/profile';\nimport PropTypes from 'prop-types';\nimport Spinner from '../Layout/Spinner';\nimport Button from '../Button';\nimport Dashboardactions from './dashboardactions';\nimport Education from './Education';\nconst Dashboard = ({auth:{user},profile:{profile,loading},getCurrentProfile}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    },[]);\n    return (loading && profile===null) ? (<Spinner/>) : (\n        <Fragment>\n            <h1 className='large text-primary'>Dashboard</h1>\n            <p className=\"lead\">\n                <i className='fas fa-user'/>{\"   \"}Welcome {user && user.name}\n            </p>\n            {profile!==null ? \n            (<Fragment>\n                <Dashboardactions/>\n            </Fragment>) : \n            (<Fragment> \n                <p>I chungchang tlema zawng a hnuaia button-ah hian hmet la belh rawh le</p>\n                <Link to=\"/createprofile\"><Button type='primary'>Create Profile</Button></Link>\n            </Fragment>)}\n            {!profile.education && <Education education={profile.education}/>}\n        </Fragment>\n    );\n}\nDashboard.propTypes = {\n    auth:PropTypes.object.isRequired,\n    getCurrentProfile:PropTypes.func.isRequired,\n    profile:PropTypes.object.isRequired,\n    education:PropTypes.array,\n}\nconst maptoprops = state => ({\n    auth:state.auth,\n    profile:state.profile,\n    education:state.profile.education,\n    loading:state.loading\n});\n    \nexport default connect(maptoprops,{getCurrentProfile})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}