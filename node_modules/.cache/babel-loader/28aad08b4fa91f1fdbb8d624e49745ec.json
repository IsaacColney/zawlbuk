{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_STARS } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    if (!res.data) {\n      dispatch({\n        type: POST_ERROR,\n        payload: {\n          msg: 'res.data is null'\n        }\n      });\n    }\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const starPost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/star/${id}`);\n    dispatch({\n      type: UPDATE_STARS,\n      payload: {\n        id,\n        stars: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const unstarPost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unstar/${id}`);\n    dispatch({\n      type: UPDATE_STARS,\n      payload: {\n        id,\n        stars: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_STARS","getPosts","dispatch","res","get","data","type","payload","msg","err","response","statusText","status","starPost","id","put","stars","unstarPost"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,SACIC,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,QAIO,SAJP;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,YAAV,CAAlB;;AACA,QAAG,CAACD,GAAG,CAACE,IAAR,EAAa;AACTH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAACP,UADA;AAELQ,QAAAA,OAAO,EAAC;AAACC,UAAAA,GAAG,EAAC;AAAL;AAFH,OAAD,CAAR;AAIH;;AACDN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACR,SADA;AAELS,MAAAA,OAAO,EAACJ,GAAG,CAACE;AAFP,KAAD,CAAR;AAIH,GAZD,CAaA,OAAOI,GAAP,EAAY;AACRP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACP,UADA;AAELQ,MAAAA,OAAO,EAAC;AAAEC,QAAAA,GAAG,EAACC,GAAG,CAACC,QAAJ,CAAaC,UAAnB;AAA8BC,QAAAA,MAAM,EAACH,GAAG,CAACC,QAAJ,CAAaE;AAAlD;AAFH,KAAD,CAAR;AAIH;AACJ,CApBM;AAqBP,OAAO,MAAMC,QAAQ,GAAGC,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAC5C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACmB,GAAN,CAAW,mBAAkBD,EAAG,EAAhC,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACN,YADA;AAELO,MAAAA,OAAO,EAAC;AAACO,QAAAA,EAAD;AAAIE,QAAAA,KAAK,EAACb,GAAG,CAACE;AAAd;AAFH,KAAD,CAAR;AAIH,GAND,CAOA,OAAOI,GAAP,EAAY;AACRP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACP,UADA;AAELQ,MAAAA,OAAO,EAAC;AAAEC,QAAAA,GAAG,EAACC,GAAG,CAACC,QAAJ,CAAaC,UAAnB;AAA8BC,QAAAA,MAAM,EAACH,GAAG,CAACC,QAAJ,CAAaE;AAAlD;AAFH,KAAD,CAAR;AAIH;AACJ,CAdM;AAeP,OAAO,MAAMK,UAAU,GAAGH,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAC9C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACmB,GAAN,CAAW,qBAAoBD,EAAG,EAAlC,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACN,YADA;AAELO,MAAAA,OAAO,EAAC;AAACO,QAAAA,EAAD;AAAIE,QAAAA,KAAK,EAACb,GAAG,CAACE;AAAd;AAFH,KAAD,CAAR;AAIH,GAND,CAOA,OAAOI,GAAP,EAAY;AACRP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACP,UADA;AAELQ,MAAAA,OAAO,EAAC;AAAEC,QAAAA,GAAG,EAACC,GAAG,CAACC,QAAJ,CAAaC,UAAnB;AAA8BC,QAAAA,MAAM,EAACH,GAAG,CAACC,QAAJ,CAAaE;AAAlD;AAFH,KAAD,CAAR;AAIH;AACJ,CAdM","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_STARS\n} from './types';\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n        if(!res.data){\n            dispatch({\n                type:POST_ERROR,\n                payload:{msg:'res.data is null'}\n            })\n        }\n        dispatch({\n            type:GET_POSTS,\n            payload:res.data\n        })    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}\nexport const starPost = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/star/${id}`);\n        dispatch({\n            type:UPDATE_STARS,\n            payload:{id,stars:res.data}\n        })    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}\nexport const unstarPost = id => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unstar/${id}`);\n        dispatch({\n            type:UPDATE_STARS,\n            payload:{id,stars:res.data}\n        })    \n    } \n    catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{ msg:err.response.statusText,status:err.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}