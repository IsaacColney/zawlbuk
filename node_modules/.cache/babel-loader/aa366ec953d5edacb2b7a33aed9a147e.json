{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/post/CommentItems.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\nimport CommentItem from './CommentItem';\n\nconst CommentItems = ({\n  post: {\n    post: {\n      _id,\n      comments\n    }\n  },\n  loading\n}) => {\n  useEffect(() => {\n    getPost(_id);\n  }, [getPost]);\n  return !loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, comments && comments.length !== 0 && comments.toArray().map(comment => /*#__PURE__*/React.createElement(CommentItem, {\n    postId: _id,\n    key: comment._id,\n    comment: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  })));\n};\n\nCommentItems.propTypes = {\n  post: PropTypes.object.isRequired\n};\n\nconst maptoprops = state => ({\n  post: state.post\n});\n\nexport default connect(maptoprops)(CommentItems);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/post/CommentItems.js"],"names":["React","useEffect","PropTypes","connect","getPost","CommentItem","CommentItems","post","_id","comments","loading","length","toArray","map","comment","propTypes","object","isRequired","maptoprops","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACA,IAAAA,IAAI,EAAC;AAACC,MAAAA,GAAD;AAAKC,MAAAA;AAAL;AAAN,GAAN;AAA4BC,EAAAA;AAA5B,CAAD,KAA0C;AAC3DT,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,OAAO,CAACI,GAAD,CAAP;AACH,GAFQ,EAEP,CAACJ,OAAD,CAFO,CAAT;AAGA,SAAO,CAACM,OAAD,iBACH;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,IAAIA,QAAQ,CAACE,MAAT,KAAmB,CAA/B,IAAoCF,QAAQ,CAACG,OAAT,GAAmBC,GAAnB,CAAuBC,OAAO,iBACnE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEN,GAArB;AAA0B,IAAA,GAAG,EAAEM,OAAO,CAACN,GAAvC;AAA4C,IAAA,OAAO,EAAEM,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqC,CADzC,CADJ;AAOH,CAXD;;AAaAR,YAAY,CAACS,SAAb,GAAyB;AACrBR,EAAAA,IAAI,EAACL,SAAS,CAACc,MAAV,CAAiBC;AADD,CAAzB;;AAGA,MAAMC,UAAU,GAAGC,KAAK,KAAK;AACzBZ,EAAAA,IAAI,EAACY,KAAK,CAACZ;AADc,CAAL,CAAxB;;AAGA,eAAeJ,OAAO,CAACe,UAAD,CAAP,CAAoBZ,YAApB,CAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {getPost} from '../../actions/post'\nimport CommentItem from './CommentItem';\nconst CommentItems = ({post:{post:{_id,comments}},loading}) => {\n    useEffect(() => {\n        getPost(_id);\n    },[getPost]);\n    return !loading &&(\n        <div className='comments'>\n            {comments && comments.length !==0 && comments.toArray().map(comment => (\n            <CommentItem postId={_id} key={comment._id} comment={comment}/>\n        ))}\n        </div>\n    )\n}\n\nCommentItems.propTypes = {\n    post:PropTypes.object.isRequired,\n}\nconst maptoprops = state => ({\n    post:state.post\n})\nexport default connect(maptoprops)(CommentItems);\n"]},"metadata":{},"sourceType":"module"}