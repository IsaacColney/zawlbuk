{"ast":null,"code":"var _jsxFileName = \"/home/bta/mizoscholar/client/src/components/post/Post.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Button from '../Button';\nimport DelButton from '../DeleteButton';\nimport { starPost, unstarPost } from '../../actions/post';\n\nconst Post = ({\n  post: {\n    post: {\n      _id,\n      text,\n      name,\n      title,\n      avatar,\n      stars,\n      date,\n      comments,\n      user\n    },\n    loading\n  },\n  getPost,\n  match\n}) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getPost(match.params.id);\n  }, [getPost]);\n\n  const starupdate = id => {\n    if (!auth.user) {\n      return null;\n    }\n\n    if (!auth.loading && stars.filter(el => el.user === auth.user._id).length === 0) {\n      starPost(id);\n    } else if (!auth.loading) {\n      unstarPost(id);\n    }\n  };\n\n  let displaystar = /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }\n  });\n\n  if (auth && auth.isAuthenticated && !auth.loading) {\n    if (stars.filter(el => el.user === auth.user._id).length !== 0) {\n      displaystar = /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 28\n        }\n      });\n    }\n  }\n\n  return loading || post == null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 36\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-dark p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${post.user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: post.avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, post.name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: '#90a39b'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, text.slice(0, 150) + ' ...'), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }\n  }, date)), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: e => starupdate(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, displaystar, ' ', post.stars.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 49\n    }\n  }, post.stars.length))))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapstatetoprops = state => ({\n  post: state.post,\n  auth: state.auth\n});\n\nexport default connect(mapstatetoprops, {\n  getPost,\n  starPost,\n  unstarPost\n})(Post);","map":{"version":3,"sources":["/home/bta/mizoscholar/client/src/components/post/Post.js"],"names":["React","useEffect","Fragment","connect","Spinner","getPost","PropTypes","Link","Moment","Button","DelButton","starPost","unstarPost","Post","post","_id","text","name","title","avatar","stars","date","comments","user","loading","match","window","scrollTo","params","id","starupdate","auth","filter","el","length","displaystar","isAuthenticated","color","slice","e","propTypes","func","isRequired","object","mapstatetoprops","state"],"mappings":"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","sourcesContent":["import React,{useEffect, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from '../Layout/Spinner';\nimport {getPost} from '../../actions/post';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment';\nimport Button from '../Button';\nimport DelButton from '../DeleteButton';\nimport {starPost,unstarPost} from '../../actions/post';\n\nconst Post = ({post:{post:{_id,text,name,title,avatar,stars,date,comments,user},loading},getPost,match}) => {\n    useEffect(()=>{\n        window.scrollTo(0, 0);\n        getPost(match.params.id);\n    },[getPost]);\n    const starupdate = (id) => {\n        if(!auth.user){\n            return null;\n        }\n        if(!auth.loading && stars.filter(el => el.user===auth.user._id).length===0){\n            starPost(id);\n        }\n        else if(!auth.loading){\n            unstarPost(id);\n        }\n    }\n    let displaystar = (<i className='far fa-star'></i>)\n    if(auth && auth.isAuthenticated && !auth.loading){\n        if(stars.filter(el => el.user===auth.user._id).length!==0){\n            displaystar = (<i className=\"fas fa-star\"></i>)\n        }\n    }\n\n\n    return loading || post==null ? <Spinner/> :(<Fragment>\n        <div className=\"post bg-dark p-1 my-1\">\n            <div>\n                <Link to={`/profile/${post.user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={post.avatar}\n                        alt=\"\"\n                    />\n                    <h4>{post.name}</h4>\n                </Link>\n            </div>\n            <div>\n                <h3 style={{color:'#90a39b'}}>{post.title}</h3>\n                <p className=\"my-1\">\n                    {text.slice(0,150)+' ...'}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='DD/MM/YYYY'>{date}</Moment>\n                </p>\n                <span onClick={e => starupdate(post._id)}>\n                    <Button>\n                        {displaystar}{' '}\n                        {post.stars.length>0 && <span>{post.stars.length}</span>}\n                    </Button>\n                </span>\n\n            </div>\n        </div>    \n    </Fragment>)\n        \n}\n\nPost.propTypes = {\n    getPost:PropTypes.func.isRequired,\n    post:PropTypes.object.isRequired,\n}\nconst mapstatetoprops = state => ({\n    post:state.post,\n    auth:state.auth\n})\n\nexport default connect(mapstatetoprops,{getPost,starPost,unstarPost})(Post);\n"]},"metadata":{},"sourceType":"module"}